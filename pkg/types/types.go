// Package types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package types

// Defines values for IceTransportPolicy.
const (
	All    IceTransportPolicy = "all"
	Public IceTransportPolicy = "public"
	Relay  IceTransportPolicy = "relay"
)

// Defines values for GetTurnAuthParamsService.
const (
	GetTurnAuthParamsServiceTurn GetTurnAuthParamsService = "turn"
)

// Defines values for GetIceAuthParamsService.
const (
	GetIceAuthParamsServiceTurn GetIceAuthParamsService = "turn"
)

// IceAuthenticationToken defines model for iceAuthenticationToken.
type IceAuthenticationToken struct {
	Credential *string   `json:"credential,omitempty"`
	Urls       *[]string `json:"urls,omitempty"`
	Username   *string   `json:"username,omitempty"`
}

// IceConfig defines model for iceConfig.
type IceConfig struct {
	IceServers         *[]IceAuthenticationToken `json:"iceServers,omitempty"`
	IceTransportPolicy *IceTransportPolicy       `json:"iceTransportPolicy,omitempty"`
}

// IceTransportPolicy defines model for iceTransportPolicy.
type IceTransportPolicy string

// TurnAuthenticationToken defines model for turnAuthenticationToken.
type TurnAuthenticationToken struct {
	Password *string   `json:"password,omitempty"`
	Ttl      *int64    `json:"ttl,omitempty"`
	Uris     *[]string `json:"uris,omitempty"`
	Username *string   `json:"username,omitempty"`
}

// GetTurnAuthParams defines parameters for GetTurnAuth.
type GetTurnAuthParams struct {
	// Service Specifies the desired service (turn)
	Service GetTurnAuthParamsService `form:"service" json:"service"`

	// Username An optional user id to be associated with the credentials
	Username *string `form:"username,omitempty" json:"username,omitempty"`

	// Ttl Duration for the lifetime of the authentication token, in seconds.
	Ttl *int `form:"ttl,omitempty" json:"ttl,omitempty"`

	// Key If an API key is used for authentication, the API key
	Key *string `form:"key,omitempty" json:"key,omitempty"`

	// Namespace Generate TURN URIs only for the Gateways in the given namespace (optional)
	Namespace *string `form:"namespace,omitempty" json:"namespace,omitempty"`

	// Gateway Generate TURN URIs only for the specified Gateway (optional); if gateway is set then
	// namespace must be set as well
	Gateway *string `form:"gateway,omitempty" json:"gateway,omitempty"`

	// Listener Generate TURN URIs only for the specified listener of a given Gateway (optional); if
	// listener is set then namespace and gateway must be set as well
	Listener *string `form:"listener,omitempty" json:"listener,omitempty"`
}

// GetTurnAuthParamsService defines parameters for GetTurnAuth.
type GetTurnAuthParamsService string

// GetIceAuthParams defines parameters for GetIceAuth.
type GetIceAuthParams struct {
	// Service Specifies the desired service (optional, turn)
	Service *GetIceAuthParamsService `form:"service,omitempty" json:"service,omitempty"`

	// Username An optional user id to be associated with the credentials
	Username *string `form:"username,omitempty" json:"username,omitempty"`

	// Ttl Duration for the lifetime of the authentication token, in seconds.
	Ttl *int `form:"ttl,omitempty" json:"ttl,omitempty"`

	// IceTransportPolicy An optional ICE transport policy ("all", "public", "relay").
	IceTransportPolicy *IceTransportPolicy `form:"iceTransportPolicy,omitempty" json:"iceTransportPolicy,omitempty"`

	// Key If an API key is used for authentication, the API key
	Key *string `form:"key,omitempty" json:"key,omitempty"`

	// Namespace Generate TURN URIs only for the Gateways in the given namespace (optional)
	Namespace *string `form:"namespace,omitempty" json:"namespace,omitempty"`

	// Gateway Generate TURN URIs only for the specified Gateway (optional); if gateway is set then
	// namespace must be set as well
	Gateway *string `form:"gateway,omitempty" json:"gateway,omitempty"`

	// Listener Generate TURN URIs only for the specified listener of a given Gateway (optional); if
	// listener is set then namespace and gateway must be set as well
	Listener *string `form:"listener,omitempty" json:"listener,omitempty"`
}

// GetIceAuthParamsService defines parameters for GetIceAuth.
type GetIceAuthParamsService string
